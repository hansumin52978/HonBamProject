{"ast":null,"code":"var _jsxFileName = \"C:\\\\Mywork\\\\HonBamProject\\\\src\\\\Component\\\\SearchPage\\\\SearchPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './SearchPage.css';\n// FontAwesomeIcon으로부터 아이콘들을 가져옴\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faMagnifyingGlass, faMapLocationDot, faPhone, faStar, faTrash } from '@fortawesome/free-solid-svg-icons';\n\n// 외부 데이터 파일을 가져옴\nimport data from '../Test/TemplateData.json';\n\n// 검색 페이지 컴포넌트 정의\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SearchPage() {\n  _s();\n  // 검색어를 저장하는 상태\n  const [searchTerm, setSearchTerm] = useState('');\n\n  // 즐겨찾기에 추가된 항목의 ID를 저장하는 배열\n  const [favorites, setFavorites] = useState([]);\n\n  // 즐겨찾기에 추가된 항목의 제목을 저장하는 배열\n  const [favoritedTitles, setFavoritedTitles] = useState([]);\n\n  // 즐겨찾기(별)를 추가하거나 제거하는 함수\n  const toggleFavorite = id => {\n    // data 배열에서 해당 ID의 템플릿을 찾아옴\n    const template = data.find(item => item.id === id);\n\n    // 이미 즐겨찾기에 추가된 경우\n    if (favorites.includes(id)) {\n      // 해당 ID를 제거\n      setFavorites(favorites.filter(favId => favId !== id));\n\n      // 만약 favoritedTitles가 존재하면\n      if (favoritedTitles) {\n        // favoritedTitles를 그대로 유지\n        setFavoritedTitles(favoritedTitles);\n      }\n\n      // 즐겨찾기에 추가되지 않은 경우\n    } else {\n      // 해당 ID를 추가하고, 항목의 제목을 favoritedTitles 배열에 추가\n      setFavorites([...favorites, id]);\n      setFavoritedTitles([...favoritedTitles, `${template.title}`]);\n    }\n  };\n\n  // JSX로 화면 렌더링\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search_page\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"logo\",\n      children: \"HOTPLACE\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"local_search\",\n        children: /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"\\uC9C0\\uC5ED\\uAC80\\uC0C9\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search_bar\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search...\",\n          onChange: event => {\n            setSearchTerm(event.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faMagnifyingGlass,\n          className: \"button\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), favoritedTitles.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"favorited-titles\",\n      children: favoritedTitles.map((title, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bye-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bye\",\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"delete-button\",\n          onClick: () => setFavoritedTitles(favoritedTitles.filter(t => t !== title)),\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faTrash\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"template_Container\",\n      children: data.filter(val => {\n        // 검색어가 없는 경우 모든 항목을 표시\n        if (searchTerm === '') {\n          return val;\n        } else if (\n        // 검색어가 있는 경우 지역에 포함된 항목을 표시\n        val.location.toLowerCase().includes(searchTerm.toLowerCase())) {\n          return val;\n        }\n      })\n      // 필터링된 결과를 매핑하여 화면에 표시\n      .map(val => {\n        const isFavorite = favorites.includes(val.id);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"template\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: val.image,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: val.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"location\",\n            children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faMapLocationDot,\n              className: \"location-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 19\n            }, this), val.location]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"number\",\n            children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faPhone\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 19\n            }, this), val.number]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"hi\",\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faStar,\n              className: `favorite-icon ${isFavorite ? 'active' : ''}`,\n              onClick: () => toggleFavorite(val.id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 17\n          }, this)]\n        }, val.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n\n// SearchPage 컴포넌트를 외부로 내보냄\n_s(SearchPage, \"Yn0oCQ43hj4CKGWFoDmohuf1jrc=\");\n_c = SearchPage;\nexport default SearchPage;\nvar _c;\n$RefreshReg$(_c, \"SearchPage\");","map":{"version":3,"names":["React","useState","FontAwesomeIcon","faMagnifyingGlass","faMapLocationDot","faPhone","faStar","faTrash","data","jsxDEV","_jsxDEV","SearchPage","_s","searchTerm","setSearchTerm","favorites","setFavorites","favoritedTitles","setFavoritedTitles","toggleFavorite","id","template","find","item","includes","filter","favId","title","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","event","target","value","icon","length","map","index","onClick","t","val","location","toLowerCase","isFavorite","src","image","alt","number","_c","$RefreshReg$"],"sources":["C:/Mywork/HonBamProject/src/Component/SearchPage/SearchPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './SearchPage.css';\r\n// FontAwesomeIcon으로부터 아이콘들을 가져옴\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {\r\n  faMagnifyingGlass,\r\n  faMapLocationDot,\r\n  faPhone,\r\n  faStar,\r\n  faTrash,\r\n} from '@fortawesome/free-solid-svg-icons';\r\n\r\n// 외부 데이터 파일을 가져옴\r\nimport data from '../Test/TemplateData.json';\r\n\r\n// 검색 페이지 컴포넌트 정의\r\nfunction SearchPage() {\r\n  // 검색어를 저장하는 상태\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n\r\n  // 즐겨찾기에 추가된 항목의 ID를 저장하는 배열\r\n  const [favorites, setFavorites] = useState([]);\r\n\r\n  // 즐겨찾기에 추가된 항목의 제목을 저장하는 배열\r\n  const [favoritedTitles, setFavoritedTitles] = useState([]);\r\n\r\n  // 즐겨찾기(별)를 추가하거나 제거하는 함수\r\n  const toggleFavorite = (id) => {\r\n    // data 배열에서 해당 ID의 템플릿을 찾아옴\r\n    const template = data.find((item) => item.id === id);\r\n\r\n    // 이미 즐겨찾기에 추가된 경우\r\n    if (favorites.includes(id)) {\r\n      // 해당 ID를 제거\r\n      setFavorites(favorites.filter((favId) => favId !== id));\r\n\r\n      // 만약 favoritedTitles가 존재하면\r\n      if (favoritedTitles) {\r\n        // favoritedTitles를 그대로 유지\r\n        setFavoritedTitles(favoritedTitles);\r\n      }\r\n\r\n      // 즐겨찾기에 추가되지 않은 경우\r\n    } else {\r\n      // 해당 ID를 추가하고, 항목의 제목을 favoritedTitles 배열에 추가\r\n      setFavorites([...favorites, id]);\r\n      setFavoritedTitles([...favoritedTitles, `${template.title}`]);\r\n    }\r\n  };\r\n\r\n  // JSX로 화면 렌더링\r\n  return (\r\n    <div className='search_page'>\r\n      <p className='logo'>HOTPLACE</p>\r\n      <div className='container'>\r\n        <ul className='local_search'>\r\n          <li>지역검색</li>\r\n        </ul>\r\n        <div className='search_bar'>\r\n          <input\r\n            type='text'\r\n            placeholder='Search...'\r\n            onChange={(event) => {\r\n              setSearchTerm(event.target.value);\r\n            }}\r\n          />\r\n          <FontAwesomeIcon icon={faMagnifyingGlass} className='button' />\r\n        </div>\r\n      </div>\r\n      {/* favoritedTitles 배열에 항목이 있는 경우에만 즐겨찾기 목록 표시 */}\r\n      {favoritedTitles.length > 0 && (\r\n        <div className='favorited-titles'>\r\n          {/* favoritedTitles 배열을 매핑하여 각 항목과 삭제 버튼을 표시 */}\r\n          {favoritedTitles.map((title, index) => (\r\n            <div key={index} className='bye-container'>\r\n              <div className='bye'>{title}</div>\r\n              {/* 삭제 버튼을 누르면 해당 항목을 favoritedTitles에서 제거 */}\r\n              <button\r\n                className='delete-button'\r\n                onClick={() =>\r\n                  setFavoritedTitles(favoritedTitles.filter((t) => t !== title))\r\n                }\r\n              >\r\n                <FontAwesomeIcon icon={faTrash} />\r\n              </button>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n      {/* data 배열을 필터링하여 검색 결과를 표시 */}\r\n      <div className='template_Container'>\r\n        {data\r\n          .filter((val) => {\r\n            // 검색어가 없는 경우 모든 항목을 표시\r\n            if (searchTerm === '') {\r\n              return val;\r\n            } else if (\r\n              // 검색어가 있는 경우 지역에 포함된 항목을 표시\r\n              val.location.toLowerCase().includes(searchTerm.toLowerCase())\r\n            ) {\r\n              return val;\r\n            }\r\n          })\r\n          // 필터링된 결과를 매핑하여 화면에 표시\r\n          .map((val) => {\r\n            const isFavorite = favorites.includes(val.id);\r\n\r\n            return (\r\n              <div className='template' key={val.id}>\r\n                <img src={val.image} alt='' />\r\n                <h3>{val.title}</h3>\r\n                <p className='location'>\r\n                  <FontAwesomeIcon\r\n                    icon={faMapLocationDot}\r\n                    className='location-icon'\r\n                  ></FontAwesomeIcon>\r\n                  {val.location}\r\n                </p>\r\n                <p className='number'>\r\n                  <FontAwesomeIcon icon={faPhone}></FontAwesomeIcon>\r\n                  {val.number}\r\n                </p>\r\n                {/* 별표 아이콘을 클릭하면 즐겨찾기 토글 함수 호출 */}\r\n                <button className='hi'>\r\n                  <FontAwesomeIcon\r\n                    icon={faStar}\r\n                    className={`favorite-icon ${isFavorite ? 'active' : ''}`}\r\n                    onClick={() => toggleFavorite(val.id)}\r\n                  />\r\n                </button>\r\n              </div>\r\n            );\r\n          })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n// SearchPage 컴포넌트를 외부로 내보냄\r\nexport default SearchPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,kBAAkB;AACzB;AACA,SAASC,eAAe,QAAQ,gCAAgC;AAChE,SACEC,iBAAiB,EACjBC,gBAAgB,EAChBC,OAAO,EACPC,MAAM,EACNC,OAAO,QACF,mCAAmC;;AAE1C;AACA,OAAOC,IAAI,MAAM,2BAA2B;;AAE5C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB;EACA,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;;EAEhD;EACA,MAAM,CAACc,SAAS,EAAEC,YAAY,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;;EAE9C;EACA,MAAM,CAACgB,eAAe,EAAEC,kBAAkB,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;;EAE1D;EACA,MAAMkB,cAAc,GAAIC,EAAE,IAAK;IAC7B;IACA,MAAMC,QAAQ,GAAGb,IAAI,CAACc,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACH,EAAE,KAAKA,EAAE,CAAC;;IAEpD;IACA,IAAIL,SAAS,CAACS,QAAQ,CAACJ,EAAE,CAAC,EAAE;MAC1B;MACAJ,YAAY,CAACD,SAAS,CAACU,MAAM,CAAEC,KAAK,IAAKA,KAAK,KAAKN,EAAE,CAAC,CAAC;;MAEvD;MACA,IAAIH,eAAe,EAAE;QACnB;QACAC,kBAAkB,CAACD,eAAe,CAAC;MACrC;;MAEA;IACF,CAAC,MAAM;MACL;MACAD,YAAY,CAAC,CAAC,GAAGD,SAAS,EAAEK,EAAE,CAAC,CAAC;MAChCF,kBAAkB,CAAC,CAAC,GAAGD,eAAe,EAAG,GAAEI,QAAQ,CAACM,KAAM,EAAC,CAAC,CAAC;IAC/D;EACF,CAAC;;EAED;EACA,oBACEjB,OAAA;IAAKkB,SAAS,EAAC,aAAa;IAAAC,QAAA,gBAC1BnB,OAAA;MAAGkB,SAAS,EAAC,MAAM;MAAAC,QAAA,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAChCvB,OAAA;MAAKkB,SAAS,EAAC,WAAW;MAAAC,QAAA,gBACxBnB,OAAA;QAAIkB,SAAS,EAAC,cAAc;QAAAC,QAAA,eAC1BnB,OAAA;UAAAmB,QAAA,EAAI;QAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACX,CAAC,eACLvB,OAAA;QAAKkB,SAAS,EAAC,YAAY;QAAAC,QAAA,gBACzBnB,OAAA;UACEwB,IAAI,EAAC,MAAM;UACXC,WAAW,EAAC,WAAW;UACvBC,QAAQ,EAAGC,KAAK,IAAK;YACnBvB,aAAa,CAACuB,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;UACnC;QAAE;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eACFvB,OAAA,CAACR,eAAe;UAACsC,IAAI,EAAErC,iBAAkB;UAACyB,SAAS,EAAC;QAAQ;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5D,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,EAELhB,eAAe,CAACwB,MAAM,GAAG,CAAC,iBACzB/B,OAAA;MAAKkB,SAAS,EAAC,kBAAkB;MAAAC,QAAA,EAE9BZ,eAAe,CAACyB,GAAG,CAAC,CAACf,KAAK,EAAEgB,KAAK,kBAChCjC,OAAA;QAAiBkB,SAAS,EAAC,eAAe;QAAAC,QAAA,gBACxCnB,OAAA;UAAKkB,SAAS,EAAC,KAAK;UAAAC,QAAA,EAAEF;QAAK;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eAElCvB,OAAA;UACEkB,SAAS,EAAC,eAAe;UACzBgB,OAAO,EAAEA,CAAA,KACP1B,kBAAkB,CAACD,eAAe,CAACQ,MAAM,CAAEoB,CAAC,IAAKA,CAAC,KAAKlB,KAAK,CAAC,CAC9D;UAAAE,QAAA,eAEDnB,OAAA,CAACR,eAAe;YAACsC,IAAI,EAAEjC;UAAQ;YAAAuB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5B,CAAC;MAAA,GAVDU,KAAK;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAWV,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CACN,eAEDvB,OAAA;MAAKkB,SAAS,EAAC,oBAAoB;MAAAC,QAAA,EAChCrB,IAAI,CACFiB,MAAM,CAAEqB,GAAG,IAAK;QACf;QACA,IAAIjC,UAAU,KAAK,EAAE,EAAE;UACrB,OAAOiC,GAAG;QACZ,CAAC,MAAM;QACL;QACAA,GAAG,CAACC,QAAQ,CAACC,WAAW,CAAC,CAAC,CAACxB,QAAQ,CAACX,UAAU,CAACmC,WAAW,CAAC,CAAC,CAAC,EAC7D;UACA,OAAOF,GAAG;QACZ;MACF,CAAC;MACD;MAAA,CACCJ,GAAG,CAAEI,GAAG,IAAK;QACZ,MAAMG,UAAU,GAAGlC,SAAS,CAACS,QAAQ,CAACsB,GAAG,CAAC1B,EAAE,CAAC;QAE7C,oBACEV,OAAA;UAAKkB,SAAS,EAAC,UAAU;UAAAC,QAAA,gBACvBnB,OAAA;YAAKwC,GAAG,EAAEJ,GAAG,CAACK,KAAM;YAACC,GAAG,EAAC;UAAE;YAAAtB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAC9BvB,OAAA;YAAAmB,QAAA,EAAKiB,GAAG,CAACnB;UAAK;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACpBvB,OAAA;YAAGkB,SAAS,EAAC,UAAU;YAAAC,QAAA,gBACrBnB,OAAA,CAACR,eAAe;cACdsC,IAAI,EAAEpC,gBAAiB;cACvBwB,SAAS,EAAC;YAAe;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACT,CAAC,EAClBa,GAAG,CAACC,QAAQ;UAAA;YAAAjB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACZ,CAAC,eACJvB,OAAA;YAAGkB,SAAS,EAAC,QAAQ;YAAAC,QAAA,gBACnBnB,OAAA,CAACR,eAAe;cAACsC,IAAI,EAAEnC;YAAQ;cAAAyB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAkB,CAAC,EACjDa,GAAG,CAACO,MAAM;UAAA;YAAAvB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACV,CAAC,eAEJvB,OAAA;YAAQkB,SAAS,EAAC,IAAI;YAAAC,QAAA,eACpBnB,OAAA,CAACR,eAAe;cACdsC,IAAI,EAAElC,MAAO;cACbsB,SAAS,EAAG,iBAAgBqB,UAAU,GAAG,QAAQ,GAAG,EAAG,EAAE;cACzDL,OAAO,EAAEA,CAAA,KAAMzB,cAAc,CAAC2B,GAAG,CAAC1B,EAAE;YAAE;cAAAU,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACvC;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACI,CAAC;QAAA,GArBoBa,GAAG,CAAC1B,EAAE;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAsBhC,CAAC;MAEV,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;;AAEA;AAAArB,EAAA,CA1HSD,UAAU;AAAA2C,EAAA,GAAV3C,UAAU;AA2HnB,eAAeA,UAAU;AAAC,IAAA2C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}